# -*- coding: utf-8 -*-
from odoo import models, fields, api, _
import logging

logger = logging.getLogger(__name__)

class SubmittedSample(models.Model):
    _name = 'terralab.submittedsample'
    _inherit = ['mail.thread']
    _description = 'TerraLab Submitted Sample'

    sample_type = fields.Many2one('terralab.sampletype', 'Sample Type', track_visibility='onchange') # Submitted Sample is of specific Sample Type
    test_products = fields.Many2many('product.template', track_visibility='onchange') # Assigned test products
    submitted_tests = fields.One2many('terralab.submittedtest', 'submitted_sample', 'Submitted Tests', track_visibility='onchange') # Submitted Sample may have many Submitted Tests attached to it
    order = fields.Many2one('sale.order', 'Order', track_visibility='onchange') # Submitted Sample is always attached to an Order
    order_lines = fields.Many2many('sale.order.line', track_visibility='onchange') # Submitted Sample is automatically attached to the Order Lines generated for it
    serial_number = fields.Char(track_visibility='onchange') # Serial number (needed?)

    num = fields.Integer(track_visibility='onchange') # Sample number
    name = fields.Char(track_visibility='onchange') # Sample name
    sample_id = fields.Char(track_visibility='onchange') # Autogenerated barcode
    status = fields.Selection([
        ('new', _('New')),
        ('received', _('Received')),
        ('qa', _('QA')),
        ('testing', _('Testing')),
        ('validated', _('Validated')),
    ], string='Status', default=None, track_visibility='onchange')
    receive_date = fields.Datetime(string='Received on', track_visibility='onchange')
    deadline = fields.Datetime(string='Deadline', track_visibility='onchange')
    submitted_target_use = fields.Many2one('terralab.submittedtargetuse', 'Target Use', track_visibility='onchange') # Attached Submitted Target Use (optional)
    area = fields.Float(track_visibility='onchange') # Metadata: area
    volume = fields.Float(track_visibility='onchange') # Metadata: volume
    location = fields.Char(track_visibility='onchange') # Metadata: location (google-maps compatible)
    create_date = fields.Datetime(string='Created on', calculate='_get_create_date', track_visibility='onchange')

    @api.depends('order')
    def _get_create_date(self):
        for item in self:
            if item.order:
                item.create_date = item.order.create_date

    def name_get(self):
        return [(submitted_sample.id, '%s %s' % (submitted_sample.sample_type.name if submitted_sample.sample_type else '(no sample)', submitted_sample.sample_id if submitted_sample.sample_id else '(no sample ID)')) for submitted_sample in self]

    # What's the next required action for this submitted sample?
    def compute_terralab_next_action(self, order_terralab_status):
        if not self.sample_type:
            return _('Set sample type for submitted sample %s') % (self.name_get()[0][1])
        if not self.sample_id:
            return _('Set sample ID for submitted sample %s') % (self.name_get()[0][1])
        if len(self.submitted_tests) <= 0:
            return _('Add submitted tests for submitted sample %s') % (self.name_get()[0][1])
        for submitted_test in self.submitted_tests:
            required_action = submitted_test.compute_terralab_next_action(order_terralab_status)
            if required_action:
                return required_action
        # No action required for this sample
        return ''
